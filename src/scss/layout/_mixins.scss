@use "sass:math";
@use "./variables" as *;
@use "./colors" as *;
@use "./typography" as *;

// REM
@function toRem($px, $current: 16) {
	$result: math.div($px, $current) + rem;
	@return $result;
}

//EM
@function toEm($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}

// Адаптивна властивість (clamp)
@mixin adaptiveValue($property, $startSize, $minSize, $keepSize: 0, $widthFrom: $containerWidth, $widthTo: $minWidth) {
	@if ($startSize==0) {
		$startSize: 0.000001;
	}

	@if ($minSize==0) {
		$minSize: 0.000001;
	}

	// Для calc();
	$addSize: math.div($startSize - $minSize, 16);

	@if ($widthFrom ==$containerWidth and $maxWidthContainer ==0) {
		$widthFrom: $maxWidth;
	}

	// Брейк-поїнти в EM
	$widthFromMedia: toEm($widthFrom);
	$widthToMedia: toEm($widthTo);

	// Формула плаваючого значення
	$slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
	$yIntersection: -$widthTo * $slope + $minSize;

	@if ($yIntersection==0) {
		$yIntersection: 0.000001;
	}

	$flyValue: #{toRem($yIntersection)}" + "#{$slope * 100}vw;

	// Отримання значення властивості
	$propertyValue: #{"clamp(" toRem($minSize) "," $flyValue "," toRem($startSize) ")"};

	// Якщо негативні значення
	@if ($minSize > $startSize) {
		$propertyValue: #{"clamp(" toRem($startSize) "," $flyValue "," toRem($minSize) ")"};
	}

	// Встановлюємо значення за замовчуванням
	@if $keepSize !=1 and $keepSize !=3 {
		@media (min-width: $widthFromMedia) {
			#{$property}: toRem($startSize);
		}
	}

	// Адаптуємо розмір у проміжку між зазначеними ширинами в'юпорту
	@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
		#{$property}: $propertyValue;

	}

	@if $keepSize !=1 and $keepSize !=2 {
		@media (max-width: $widthToMedia) {
			#{$property}: toRem($minSize);
		}
	}
}



@mixin pg-64 {
	padding: 32px 0;

	@media (min-width:$pc) {
		padding: 64px 0;
	}
}


@mixin line {

	&::after {
		content: '';
		display: block;
		width: 100%;
		max-width: 120px;
		height: 1px;
		background: $brown;
		transition: background 0.3s ease-in-out;
		margin: 24px auto;
	}

	@media (min-width:$pc) {
		&::after {
			margin: 32px auto;
		}
	}
}

@mixin mb-20 {
	&:not(:last-child) {
		margin-bottom: 16px;
	}

	@media (min-width:$pc) {
		&:not(:last-child) {
			margin-bottom: 20px;
		}
	}
}

@mixin mb-32 {
	&:not(:last-child) {
		margin-bottom: 24px;
	}

	@media (min-width:$pc) {
		&:not(:last-child) {
			margin-bottom: 32px;
		}
	}
}

@mixin mb-64 {
	&:not(:last-child) {
		margin-bottom: 24px;
	}

	@media (min-width:$pc) {
		&:not(:last-child) {
			margin-bottom: 64px;
		}
	}
}

@mixin overlay-60 {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: linear-gradient(0deg, rgba(0, 0, 0, 0.60) 0%, rgba(0, 0, 0, 0.60) 100%);
	z-index: 1;
}

@mixin overlay-20 {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: linear-gradient(0deg, rgba(0, 0, 0, 0.20) 0%, rgba(0, 0, 0, 0.20) 100%);
	z-index: 1;
}